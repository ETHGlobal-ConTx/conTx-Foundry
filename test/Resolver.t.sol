// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import "forge-std/Test.sol";
import '../../eas-contracts/SchemaRegistry.sol';
import '../../eas-contracts/resolver/ISchemaResolver.sol';
import { IEAS, Attestation } from "../../eas-contracts/IEAS.sol";

import '../src/AttesterResolver.sol';
import 'forge-std/console.sol';

contract TestResolver is Test {
    uint256 baseGoerli = vm.createFork('https://base-goerli.publicnode.com');
    address public attesterAddress = 0xAC4cda272DEF2019e36CB227D506b5969aA3b248;
    IEAS eas = IEAS(0x4200000000000000000000000000000000000021);
    SchemaRegistry schemaRegistry = SchemaRegistry(0x4200000000000000000000000000000000000020);

    function setUp() public {
        vm.selectFork(baseGoerli);
        string memory schemaData = "string Name, address Sender, string Ipfs";
        AttesterResolver umaResolver = new AttesterResolver(eas, attesterAddress);
        ISchemaResolver umaResolverInterface = ISchemaResolver(address(umaResolver));

       bytes32 schemaId = schemaRegistry.register(schemaData, umaResolverInterface, true);
     //   console.log(schemaId);
    }   

    function testAttest() public {
        vm.selectFork(baseGoerli);

        // bytes memory sampleData = 0x0000000000000000000000003194cd0b46183e8058ab3981fa2f37e01be7df6600000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000423078656539623132656464323235393736346637613738333331613533363065323765393636653066666431356334376136323265633362363133656334343165360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008746573746d617279000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b6465736372697074696f6e

        // schemaRegistry.attest(sampleData);
    }
}

